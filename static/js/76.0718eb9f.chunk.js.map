{"version":3,"file":"static/js/76.0718eb9f.chunk.js","mappings":"2OACA,EAA2B,uBAA3B,EAA6D,uBAA7D,EAAgG,wBAAhG,EAAmI,uBAAnI,EAA0K,4B,SCgD1K,EA3CsB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACvB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,gHAEWC,EAAAA,EAAAA,IAAaN,GAFxB,gBAEJE,EAFI,EAEJA,KACRC,EAAQD,GAHI,gDAKZK,QAAQC,IAAI,6BAAZ,MALY,yDAAH,qDASbH,GACD,GAAE,CAACL,KAGF,eAAIS,UAAWC,EAAf,SACGR,EAAKS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,gBAAaN,UAAWC,EAAxB,WACE,gBACEM,IACEH,EACII,EAAAA,GAAYJ,EACZ,0DAENK,IAAKJ,EACLK,MAAM,MACNC,OAAO,MACPX,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAA6BI,KAC7B,eAAGL,UAAWC,EAAd,wBAA6CK,OAbtCH,EADD,KAmBf,C,uNCzCDS,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCACHL,EAAY,kCAEZM,EAAY,mCAAG,WAAOC,GAAP,kFACpBC,EADoB,+BACkBH,EADlB,4DAC6EE,GAD7E,SAEKH,EAAAA,EAAAA,IAAUI,GAFf,uBAEZC,EAFY,EAElBC,KAFkB,kBAGnBD,GAHmB,2CAAH,sDAMZE,EAAe,mCAAG,WAAO5B,GAAP,kFACvByB,EADuB,gBACAzB,EADA,qBACoBsB,EADpB,4BAECD,EAAAA,EAAAA,IAAUI,GAFX,uBAEfI,EAFe,EAErBF,KAFqB,kBAGtBE,GAHsB,2CAAH,sDAMfC,EAAmB,mCAAG,+FAC3BL,EAD2B,qCACiBH,GADjB,SAEFD,EAAAA,EAAAA,IAAUI,GAFR,uBAEnBC,EAFmB,EAEzBC,KAFyB,kBAG1BD,GAH0B,2CAAH,qDAMnBpB,EAAY,mCAAG,WAAON,GAAP,kFACpByB,EADoB,gBACGzB,EADH,4BAC8BsB,EAD9B,4BAEHD,EAAAA,EAAAA,IAAUI,GAFP,uBAElBE,EAFkB,EAElBA,KAFkB,kBAGnBA,GAHmB,2CAAH,sDAOZI,EAAU,mCAAG,WAAO/B,GAAP,kFAClByB,EADkB,gBACKzB,EADL,4BACgCsB,EADhC,4BAEDD,EAAAA,EAAAA,IAAUI,GAFT,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/movies.api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"castName\":\"Cast_castName__-i08u\",\"castCharacter\":\"Cast_castCharacter__Rliw1\"};","\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieCast, IMAGE_URL } from 'services/movies.api';\nimport css from './Cast.module.css';\n\nconst MovieCastView = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const { cast } = await getMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log('Error fetching movie cast:', error);\n      }\n    };\n\n    getCast();\n  }, [movieId]);\n\n  return (\n    <ul className={css.castList}>\n      {cast.map(({ id, profile_path, name, character }) => (\n        <li key={id} className={css.castItem}>\n          <img\n            src={\n              profile_path\n                ? IMAGE_URL + profile_path\n                : 'https://bitsofco.de/content/images/2018/12/broken-1.png'\n            }\n            alt={name}\n            width=\"100\"\n            height=\"100\"\n            className={css.castImage}\n          />\n          <p className={css.castName}>{name}</p>\n          <p className={css.castCharacter}>Character: {character}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieCastView.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default MovieCastView;\n// import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import { getMovieCast, IMAGE_URL } from 'services/movies.api';\n// import css from './Cast.module.css';\n\n// export default function MovieCastView({ movieId }) {\n//   const [cast, setCast] = useState([]);\n\n//   useEffect(() => {\n//     const fetchCast = async () => {\n//       try {\n//         const { cast } = await getMovieCast(movieId);\n//         setCast(cast);\n//       } catch (error) {\n//         console.log('Error fetching movie cast:', error);\n//       }\n//     };\n\n//     if (movieId) {\n//       fetchCast();\n//     }\n//   }, [movieId]);\n\n//   return (\n//     <div>\n//       {cast.length > 0 ? (\n//         <>\n//           <ul className={css.castList}>\n//             {cast.map(({ id, profile_path, name, character }) => (\n//               <li key={id}>\n//                 {profile_path && (\n//                   <img\n//                     src={`${IMAGE_URL}${profile_path}`}\n//                     alt={name}\n//                     className={css.castImg}\n//                   />\n//                 )}\n//                 <p className={css.castName}>{name}</p>\n//                 <p>Character: {character}</p>\n//               </li>\n//             ))}\n//           </ul>\n//         </>\n//       ) : (\n//         <p>No cast available for this movie.</p>\n//       )}\n//     </div>\n//   );\n// }\n\n// MovieCastView.propTypes = {\n//   movieId: PropTypes.string.isRequired,\n// };\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '81a8869c255f2e2cdd160d2494e708bd';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async (stringToSearch) => {\n  const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${API_KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const queryString = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\n\nexport const getReviews = async (movieId) => {\n  const queryString = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\n"],"names":["movieId","useState","cast","setCast","useEffect","getCast","getMovieCast","console","log","className","css","map","id","profile_path","name","character","src","IMAGE_URL","alt","width","height","axios","API_KEY","searchMovies","stringToSearch","queryString","movies","data","getMovieDetails","movie","fetchTrendingMovies","getReviews"],"sourceRoot":""}