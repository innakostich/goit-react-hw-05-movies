{"version":3,"file":"static/js/135.c82c5583.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/movies.api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieDetails_movieContainer__ilr3m\",\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"active\":\"MovieDetails_active__uPNdW\"};","\n// import Loader from 'components/Loader/Loader';\n// import { useState, useEffect, lazy, Suspense } from 'react';\n// import {\n//   useParams,\n//   NavLink,\n//   useLocation,\n//   useNavigate,\n//   Routes,\n//   Route,\n//   useMatch,\n// } from 'react-router-dom';\n// import { getMovieDetails, IMAGE_URL } from '../../services/movies.api';\n// import css from './MovieDetails.module.css';\n\n// const MovieReview = lazy(() => import('components/Reviews/Reviews'));\n// const MovieCastView = lazy(() => import('components/Cast/Cast'));\n\n// export default function MovieDetailsPage() {\n//   const [movie, setMovie] = useState(null);\n//   const { movieId } = useParams();\n//   const history = useNavigate();\n//   const location = useLocation();\n//   const match = useMatch();\n\n//   useEffect(() => {\n//     const getMovie = async () => {\n//       const currentMovie = await getMovieDetails(movieId);\n\n//       setMovie(currentMovie);\n//     };\n\n//     getMovie();\n//   }, [movieId]);\n\n//   const onGoBack = () => {\n//     history.push(location?.state?.from?.location ?? '/movies');\n//   };\n\n//   return (\n//     <>\n//       {!movie ? (\n//         <div className={css.notFound}>This movie is not found</div>\n//       ) : (\n//         <>\n//           <button type=\"button\" onClick={onGoBack}>\n//             Go back\n//           </button>\n//           <div className={css.movieContainer}>\n//             <div className={css.movieImg}>\n//               <img\n//                 src={\n//                   movie.poster_path\n//                     ? IMAGE_URL + movie.poster_path\n//                     : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n//                 }\n//                 alt={movie.title}\n//                 width=\"\"\n//                 height=\"\"\n//               />\n//             </div>\n\n//             <div>\n//               <h2>{movie.title}</h2>\n//               <p>User Score: {`${movie.vote_average * 10}`}%</p>\n//               <h3>Overview</h3>\n//               <p>{`${movie.overview}`}</p>\n//               <h3>Genres</h3>\n//               <p>{`${movie.genres.map((genre) => genre.name).join(' / ')}`}</p>\n//             </div>\n//           </div>\n//         </>\n//       )}\n//       <hr />\n//       <p>Additional information</p>\n//       <nav>\n//         <NavLink\n//           to={{ pathname: `${match?.url}/cast`, state: location.state }}\n//           className={css.link}\n//           activeClassName={css.active}\n//         >\n//           Cast\n//         </NavLink>\n//         <NavLink\n//           to={{ pathname: `${match?.url}/reviews`, state: location.state }}\n//           className={css.link}\n//           activeClassName={css.active}\n//         >\n//           Reviews\n//         </NavLink>\n//       </nav>\n\n//       <Suspense fallback={<Loader />}>\n//         <Routes>\n//           <Route path={`${match?.path}/cast`}>\n//             <MovieCastView movieId={movieId} />\n//           </Route>\n\n//           <Route path={`${match?.path}/reviews`}>\n//             <MovieReview movieId={movieId} />\n//           </Route>\n//         </Routes>\n//       </Suspense>\n//     </>\n//   );\n// }\nimport React, { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  NavLink,\n  useLocation,\n  useNavigate,\n  Routes,\n  Route,\n  useMatch,\n} from 'react-router-dom';\nimport { getMovieDetails, IMAGE_URL } from 'services/movies.api';\nimport Loader from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieReview = lazy(() => import('components/Reviews/Reviews'));\nconst MovieCastView = lazy(() => import('components/Cast/Cast'));\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const history = useNavigate();\n  const location = useLocation();\n  const match = useMatch();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      const currentMovie = await getMovieDetails(movieId);\n\n      setMovie(currentMovie);\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from?.location ?? '/movies');\n  };\n\n  return (\n    <>\n      {!movie ? (\n        <div className={css.notFound}>This movie is not found</div>\n      ) : (\n        <>\n          <button type=\"button\" onClick={onGoBack}>\n            Go back\n          </button>\n          <div className={css.movieContainer}>\n            <div className={css.movieImg}>\n              <img\n                src={\n                  movie.poster_path\n                    ? IMAGE_URL + movie.poster_path\n                    : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n                }\n                alt={movie.title}\n                width=\"\"\n                height=\"\"\n              />\n            </div>\n\n            <div>\n              <h2>{movie.title}</h2>\n              <p>User Score: {`${movie.vote_average * 10}`}%</p>\n              <h3>Overview</h3>\n              <p>{`${movie.overview}`}</p>\n              <h3>Genres</h3>\n              <p>{`${movie.genres.map(genre => genre.name).join(' / ')}`}</p>\n            </div>\n          </div>\n        </>\n      )}\n      <hr />\n      <p>Additional information</p>\n      <nav>\n        <NavLink\n          to={{ pathname: `${match?.url}/cast`, state: location.state }}\n          className={css.link}\n          activeClassName={css.active}\n        >\n          Cast\n        </NavLink>\n        <NavLink\n          to={{ pathname: `${match?.url}/reviews`, state: location.state }}\n          className={css.link}\n          activeClassName={css.active}\n        >\n          Reviews\n        </NavLink>\n      </nav>\n\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path={`${match?.path}/cast`}>\n            <MovieCastView movieId={movieId} />\n          </Route>\n\n          <Route path={`${match?.path}/reviews`}>\n            <MovieReview movieId={movieId} />\n          </Route>\n        </Routes>\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '81a8869c255f2e2cdd160d2494e708bd';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async stringToSearch => {\n  const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async movieId => {\n  const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${API_KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async movieId => {\n  const queryString = `movie/${movieId}/credits$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\nexport const getReviews = async movieId => {\n  const queryString = `movie/${movieId}/reviews$?api_key={apiKey}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};"],"names":["MovieReview","lazy","MovieCastView","MovieDetailsPage","useState","movie","setMovie","movieId","useParams","history","useNavigate","location","useLocation","match","useMatch","useEffect","getMovie","getMovieDetails","currentMovie","type","onClick","push","state","from","className","css","src","poster_path","IMAGE_URL","alt","title","width","height","vote_average","overview","genres","map","genre","name","join","to","pathname","url","activeClassName","Suspense","fallback","Loader","path","axios","API_KEY","searchMovies","stringToSearch","queryString","movies","data","fetchTrendingMovies","getMovieCast","getReviews"],"sourceRoot":""}