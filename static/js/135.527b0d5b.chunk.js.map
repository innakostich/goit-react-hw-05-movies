{"version":3,"file":"static/js/135.527b0d5b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/movies.api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MovieDetails_movieContainer__ilr3m\",\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"link\":\"MovieDetails_link__U+v+7\",\"active\":\"MovieDetails_active__uPNdW\",\"notFound\":\"MovieDetails_notFound__+OqD2\",\"goBackButton\":\"MovieDetails_goBackButton__gD2UR\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"addInfo\":\"MovieDetails_addInfo__lKFr+\",\"listInfo\":\"MovieDetails_listInfo__8Bb04\"};","// import React, { useState, useEffect, Suspense } from 'react';\n// import { useParams, useLocation, useNavigate, NavLink, Outlet } from 'react-router-dom';\n// import { getMovieDetails, IMAGE_URL, getMovieCast, getReviews } from 'services/movies.api';\n// import Loader from 'components/Loader/Loader';\n// import css from './MovieDetails.module.css';\n\n\n// const MovieDetails = () => {\n//   const [movie, setMovie] = useState(null);\n//   const [cast, setCast] = useState([]);\n//   const [reviews, setReviews] = useState([]);\n//   const { movieId } = useParams();\n//   const history = useNavigate();\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     const getMovie = async () => {\n//       const currentMovie = await getMovieDetails(movieId);\n//       setMovie(currentMovie);\n//     };\n\n//     const getMovieCastAndReviews = async () => {\n//       const movieCast = await getMovieCast(movieId);\n//       const movieReviews = await getReviews(movieId);\n//       setCast(movieCast.cast);\n//       setReviews(movieReviews.results);\n//     };\n\n//     getMovie();\n//     getMovieCastAndReviews();\n//   }, [movieId]);\n\n  // const onGoBack = () => {\n  //   history(location?.state?.from?.location ?? '/movies');\n  // };\n\n//   return (\n//     <>\n//       {!movie ? (\n//         <div className={css.notFound}>This movie is not found</div>\n//       ) : (\n//         <>\n          // <button type=\"button\" onClick={onGoBack} className={css.goBackButton}>\n          //   Go back\n          // </button>\n\n          // <div className={css.movieContainer}>\n          //   <div className={css.movieImg}>\n          //     <img\n          //       src={\n          //         movie.poster_path\n          //           ? IMAGE_URL + movie.poster_path\n          //           : 'https://bitsofco.de/content/images/2018/12/broken-1.png'\n          //       }\n          //       alt={movie.title}\n          //       width=\"\"\n          //       height=\"\"\n          //     />\n          //   </div>\n\n//             <div>\n//               <h2>{movie.title}</h2>\n//               <p>User Score: {`${movie.vote_average * 10}`}%</p>\n//               <h3>Overview</h3>\n//               <p>{`${movie.overview}`}</p>\n//               <h3>Genres</h3>\n//               <p>{`${movie.genres.map((genre) => genre.name).join(' / ')}`}</p>\n//             </div>\n//           </div>\n//         </>\n//       )}\n//       <hr />\n//       <p>Additional information</p>\n      // <nav>\n      //   <NavLink\n      //     to={`/movies/${movieId}/cast`}\n      //     className={css.link}\n      //     activeclassname={css.active}\n      //   >\n      //     Cast\n      //   </NavLink>\n      //   <NavLink\n      //     to={`/movies/${movieId}/reviews`}\n      //     className={css.link}\n      //     activeclassname={css.active}\n      //   >\n      //     Reviews\n      //   </NavLink>\n      // </nav>\n\n    //   <Suspense fallback={<Loader />}>\n    //     <Outlet movieId={movieId} cast={cast} reviews={reviews} />\n    //   </Suspense>\n    // </>\n//   );\n// };\n\n// export default MovieDetails;\nimport React, { useState, useEffect, useRef, Suspense } from 'react';\nimport { Outlet, Link, useParams, useLocation, useNavigate, Routes, Route } from 'react-router-dom';\nimport { getMovieDetails, IMAGE_URL } from 'services/movies.api';\nimport css from './MovieDetails.module.css';\n\nconst Cast = React.lazy(() => import('components/Cast/Cast'));\nconst Reviews = React.lazy(() => import('components/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  const { movieId } = useParams();\n  const backLinkLocation = useRef(location.state?.from ?? '/');\n  const history = useNavigate();\n\n  const onGoBack = () => {\n    history(backLinkLocation.current);\n  };\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovieDetails(data);\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkLocation.current}>\n        <button type=\"button\" onClick={onGoBack} className={css.goBackButton}>\n          Go back\n        </button>\n      </Link>\n      <div className={css.movieContainer}>\n        <div className={css.movieImg}>\n          <img\n            src={\n              movie.poster_path\n                ? IMAGE_URL + movie.poster_path\n                : 'https://bitsofco.de/content/images/2018/12/broken-1.png'\n            }\n            alt={movie.title}\n            width=\"\"\n            height=\"\"\n          />\n        </div>\n        <div>\n          <h2>{movie.title}</h2>\n          <p>User Score: {`${movie.vote_average * 10}`}%</p>\n          <h3>Overview</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres</h3>\n          <ul className={css.genres}>\n            {movieDetails.genres &&\n              movieDetails.genres.map(item => (\n                <li key={item.id}>{item.name}</li>\n              ))}\n          </ul>\n        </div>\n      </div>\n      <div >\n        <h4 className={css.addInfo}>Additional information</h4>\n        <ul className={css.listInfo}>\n          <li>\n            <Link to={`${movieId}/cast`} className={css.link}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to={`${movieId}/reviews`} className={css.link}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path={`${movieId}/cast`} element={<Cast movieId={movieId} />} />\n          <Route path={`${movieId}/reviews`} element={<Reviews movieId={movieId} />} />\n        </Routes>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '81a8869c255f2e2cdd160d2494e708bd';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const searchMovies = async (stringToSearch) => {\n  const queryString = `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${stringToSearch}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieDetails = async (movieId) => {\n  const queryString = `movie/${movieId}$?api_key=${API_KEY}&language=en-US`;\n  const { data: movie } = await axios.get(queryString);\n  return movie;\n};\n\nexport const fetchTrendingMovies = async () => {\n  const queryString = `trending/movie/day?api_key=${API_KEY}`;\n  const { data: movies } = await axios.get(queryString);\n  return movies;\n};\n\nexport const getMovieCast = async (movieId) => {\n  const queryString = `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\n\nexport const getReviews = async (movieId) => {\n  const queryString = `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n  const { data } = await axios.get(queryString);\n  return data;\n};\n\n"],"names":["Cast","React","Reviews","useState","movieDetails","setMovieDetails","movie","setMovie","location","useLocation","movieId","useParams","backLinkLocation","useRef","state","from","history","useNavigate","useEffect","getMovieDetails","data","console","log","fetchMovie","to","current","type","onClick","className","css","src","poster_path","IMAGE_URL","alt","title","width","height","vote_average","overview","genres","map","item","name","id","Suspense","fallback","path","element","axios","API_KEY","searchMovies","stringToSearch","queryString","movies","fetchTrendingMovies","getMovieCast","getReviews"],"sourceRoot":""}